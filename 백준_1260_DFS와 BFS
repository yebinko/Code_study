import sys
from collections import deque
input = sys.stdin.readline

n, m, v = map(int, input().rstrip().split())
graph = [[0] * (n+1) for _ in range(n+1)]
for i in range(m):
    a,b = map(int, input().split())
    graph[a][b] = graph[b][a] = 1


visited1 = [False] * (n+1)
visited2 = visited1.copy()

def dfs(v):
    visited1[v] = True
    print(v, end = ' ')
    for i in range(1, n+1):
        if graph[v][i] == 1 and visited1[i] == False:
            dfs(i)

def bfs(start):
    que = deque([start])
    visited2[start] = True
    while que:
        v = que.popleft()
        print(v, end = ' ')
        for i in range(1, n+1):
            if (visited2[i]==False and graph[v][i]==1):
                que.append(i)
                visited2[i] = True

dfs(v)
print()
bfs(v)
